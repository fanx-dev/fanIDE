/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package net.colar.netbeans.fan.wizard;

import javax.swing.JFileChooser;
import net.colar.netbeans.fan.platform.FanPlatform;

/*
 * Panel for Fan options.
 * Generated using panel maker / wizard in netbeans.
 *
 * @author thibautc
 */
public class FanGlobalSettingsPanel extends javax.swing.JPanel
{

    private final JFileChooser chooser;
    private final FanGlobalSettingsController controller;

    /** Creates new form FanGlobalSettingsPanel */
    public FanGlobalSettingsPanel(FanGlobalSettingsController ctrl)
    {
	controller=ctrl;
	initComponents();
	chooser = new JFileChooser();
	chooser.setMultiSelectionEnabled(false);
	chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
	chooser.setApproveButtonText("Select");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        homeLabel = new javax.swing.JLabel();
        homeBrowse = new javax.swing.JButton();
        homeField = new javax.swing.JTextField();
        errorLabel = new javax.swing.JLabel();

        homeLabel.setText(org.openide.util.NbBundle.getMessage(FanGlobalSettingsPanel.class, "FanGlobalSettingsPanel.homeLabel.text")); // NOI18N

        homeBrowse.setText(org.openide.util.NbBundle.getMessage(FanGlobalSettingsPanel.class, "FanGlobalSettingsPanel.homeBrowse.text")); // NOI18N
        homeBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBrowseActionPerformed(evt);
            }
        });

        homeField.setText(org.openide.util.NbBundle.getMessage(FanGlobalSettingsPanel.class, "FanGlobalSettingsPanel.homeField.text")); // NOI18N
        homeField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                homeFieldKeyReleased(evt);
            }
        });

        errorLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setText(org.openide.util.NbBundle.getMessage(FanGlobalSettingsPanel.class, "FanGlobalSettingsPanel.errorLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(homeLabel)
                        .addGap(18, 18, 18)
                        .addComponent(homeField, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(homeBrowse)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homeLabel)
                    .addComponent(homeBrowse)
                    .addComponent(homeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 230, Short.MAX_VALUE)
                .addComponent(errorLabel)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void homeBrowseActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_homeBrowseActionPerformed
    {//GEN-HEADEREND:event_homeBrowseActionPerformed
	int val = chooser.showDialog(this, "Select");
	if (val == JFileChooser.APPROVE_OPTION)
	{
	    homeField.setText(chooser.getSelectedFile().getPath());
	    controller.changed();
	}
    }//GEN-LAST:event_homeBrowseActionPerformed

    private void homeFieldKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_homeFieldKeyReleased
    {//GEN-HEADEREND:event_homeFieldKeyReleased
	controller.changed();
    }//GEN-LAST:event_homeFieldKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton homeBrowse;
    private javax.swing.JTextField homeField;
    private javax.swing.JLabel homeLabel;
    // End of variables declaration//GEN-END:variables

    public boolean valid()
    {
	boolean valid=FanPlatform.checkFanHome(homeField.getText());
	if(!valid)
	    errorLabel.setText("Fan Home is invalid!");
	else
	    errorLabel.setText("");
	return valid;
    }

    void setFanHome(String home)
    {
	if(home==null)
	    home="";
	homeField.setText(home);
    }

    String getFanHome()
    {
	return homeField.getText();
    }
}
