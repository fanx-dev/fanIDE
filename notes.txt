constructor
-> check required super call
-> parameters.

method
-> parameters
-> if static : no super

Type
-> check if all abstract/virtual overidden

Closure / it blocks

===== Indexing ====
2 Index: "compiled" and "new"

Using FanPodIndexer for "compiled" pods (builtin Fan reflection)

On "reindex"(files changed in or out of editor) add to "temp" index, using AST tree from structureAnalyzer
On "compile" remove all types/files in the compile pod from "temp"

Search:
Search in "temp" index first.
Then using FanPodIndexer for "compiled" pods (builtin Fan reflection)

Persistance:
Persist to NB cache ? compiled doesn't need to - new probably does (or simply cache list of files and load them again in mem at startup ?)


========== Currently Being worked on============================================
  - [DONE] Fix Bug in license mport for Fan File template
  - [DONE] Fix Bug where main class name is not update in project props on pod creation.
  - [STARTED] Start working on completion for standard fan libs.
  - [STARTED] Start working on basic debugging.
  - Add sub-menu to build.fan for running actions: doc,clean and others defined in BuildPod.fan (clean, native...)
  - Also have a "custom" option with text entry dialog to run user actions
  - Cleanup hard-coded strings (actions/menus etc...)
  - Change fan_home checks so that it hints to the problem if not executable(fan.exe on windows)
  - Fix few parser issues (ternary expr?)
  - Check on this [[http://wiki.netbeans.org/PluginPortalQualityCriteria]] and submit to NB plugin portal.

========= Long term Goals ======================================================

- Semantic analysis
    - [DONE] step 1: highlighting (2)
    -step 2: uses/misuses (4)
    -step 3: with inheritance ? (5) - prob. need indexer
- Indexer
    -Platform with source/libs managment (4)
	-sourcemangement: local
	-sourcemangement: fan (fan_home)
	-sourcemangement: java ?
- Code completion
	-Std libraries(fan): 2
    -Local:3
    -Remote:5
	-Fandoc / Javadoc in compl. window
- Occurence finder (2)
- Pretty formatting (4)
- Rename / Refactor
    -Local: 2
    -Remote: 4
- Go to definition
    -Local:2
    -Remote:3
- Fix imports
    - Fan (3)
    - Java (5)
- Fix proposals
    - Impl missing methods (abstracts/virtual etc..)
    - Create method/class/mixin ...




